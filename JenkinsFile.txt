pipeline {
    agent {
        label "master"
    }
   
    environment {
        // This can be nexus3 or nexus2
        NEXUS_VERSION = "nexus3"
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running
        NEXUS_URL = "localhost:8081/Nexus"
        // Repository where we will upload the artifact
        NEXUS_REPOSITORY = "Releases"
        // Jenkins credential id to authenticate to Nexus OSS
        NEXUS_CREDENTIAL_ID = "admin:admin123"
    }
    stages {
        stage("clone code") {
            steps {
                script {
                    // Let's clone the source
                    git 'https://github.com/ihebsd/Timesheet-CI-Project.git';
                }
            }
        }
        stage("mvn build") {
            steps {
                script {
                    // If you are using Windows then you should use "bat" step
                    // Since unit testing is out of the scope we skip them
                    bat "mvn package -DskipTests=true"
                }
            }
        }
        stage("mvn clean install ") {
            steps {
                script {
                    // If you are using Windows then you should use "bat" step
                    // Since unit testing is out of the scope we skip them
                    bat "mvn clean"
                }
            }
        }
        stage("mvn test ") {
            steps {
                script {
                    // If you are using Windows then you should use "bat" step
                    // Since unit testing is out of the scope we skip them
                    bat "mvn test"
                }
            }
        }
     
        
        stage("sonar ") {
            steps {
                script {
                    // If you are using Windows then you should use "bat" step
                    // Since unit testing is out of the scope we skip them
                    bat "mvn sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dsonar.login=0b67cd4e41eb38424d580b14caad672aec92a6a0"
                }
            }
        } 

        stage("Qualty Gate sonar status check ") {

            steps{
                sleep time: 1, unit: 'HOURS'
                script{
                    def qg=waitForQualityGate()
                     if(qg.status != 'OK'){
                error "Pipeline aborded due to errors in the code or quality of code ${qg.status}"
            }
                }
            }
          
        } 

           
         stage("mvn deploy") {
            steps {
                script {
                    // If you are using Windows then you should use "bat" step
                    // Since unit testing is out of the scope we skip them
                    bat "mvn -s settings.xml clean deploy"
                }
            }
        }

  
        stage("mail") {
          steps {
          mail bcc: '', body: '''Hello saiiid the build of your project successed.
            Jenkins.''', cc: '', from: '', replyTo: '', subject: 'Build succed', to: 'mouhamedsaid.raoudh@esprit.tn'
          }
        
        }
        
        
       
}


}

