

pipeline {
    agent {
        label "master"
    }
   
    environment {
        // This can be nexus3 or nexus2
        NEXUS_VERSION = "nexus3"
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running
        NEXUS_URL = "localhost:8081/Nexus"
        // Repository where we will upload the artifact
        NEXUS_REPOSITORY = "Releases"
        // Jenkins credential id to authenticate to Nexus OSS
        NEXUS_CREDENTIAL_ID = "admin:admin123"
          registry = "medsaidraoudh/try_this"
        registryCredential = 'medsaidcredentials11'
        dockerImage = ''

    }
    stages {
        stage("clone code") {
            steps {
                script {
                    // Let's clone the source
                    git branch: 'said', url: 'https://github.com/ihebsd/Timesheet-CI-Project.git';
                }
            }
        }
        stage("mvn clean install ") {
            steps {
                script {
                    // If you are using Windows then you should use "bat" step
                    // Since unit testing is out of the scope we skip them
                    bat "mvn clean -DskipTests=true"
                }
            }
        }
        stage("mvn build") {
            steps {
                script {
                    // If you are using Windows then you should use "bat" step
                    // Since unit testing is out of the scope we skip them
                    bat "mvn package -DskipTests=true"
                }
            }
        }
    
        // stage("mvn test ") {
        //     steps {
        //         script {
        //             // If you are using Windows then you should use "bat" step
        //             // Since unit testing is out of the scope we skip them
        //             bat "mvn test"
        //         }
        //     }
        // }
     
        
    //     stage("sonar") {
         
    //         steps {
    //             script {
    //                 // If you are using Windows then you should use "bat" step
    //                 // Since unit testing is out of the scope we skip them
    //                  withSonarQubeEnv('timesheet-environment') {

    //                 bat "mvn sonar:sonar"
    //                  }
    //             }
    //         }
    //     } 

    //    stage("Quality Gate") {
    //         steps {
    //           timeout(time: 1, unit: 'HOURS') {
    //             waitForQualityGate abortPipeline: true
    //           }
    //         }
    //       }

           
        //  stage("mvn deploy") {
        //     steps {
        //         script {
        //             // If you are using Windows then you should use "bat" step
        //             // Since unit testing is out of the scope we skip them
        //             bat "mvn -s settings.xml clean deploy"
        //         }
        //     }
        // }

     stage('Building docker image') {
          steps{
               script {
                 // this step build docker image 
                 
                 docker.build registry + ":$BUILD_NUMBER"
                }
         }    
        }
       stage('Deploy Image') {
         steps{
           script {
                 // this step push the docker image builded to dockerhub
             bat "docker login -u medsaidraoudh -p abcABC1233"
	         bat "docker push $registry:$BUILD_NUMBER"
                 
          }
        }
      }

  
        // stage("mail") {
        //   steps {
        //   mail bcc: '', body: '''Hello saiiid the build of your project successed.
        //     Jenkins.''', cc: '', from: '', replyTo: '', subject: 'Build succed', to: 'mouhamedsaid.raoudh@esprit.tn'
        //   }
        
        // }
        
        
       
}


}

